"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/NetworkBackground.tsx":
/*!******************************************!*\
  !*** ./components/NetworkBackground.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ NetworkBackground; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction NetworkBackground() {\n    _s();\n    const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [lights, setLights] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [dimensions, setDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateDimensions = ()=>{\n            setDimensions({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n        };\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n        const newNodes = [];\n        const { width, height } = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        };\n        // Define the text exclusion zone - much larger to avoid any overlap\n        const centerX = width / 2;\n        const centerY = height / 2;\n        const exclusionWidth = Math.min(800, width * 0.7);\n        const exclusionHeight = Math.min(400, height * 0.6);\n        // Only create nodes in the outer regions - far from text\n        const positions = [\n            // Top corners only\n            {\n                x: width * 0.1,\n                y: height * 0.1\n            },\n            {\n                x: width * 0.9,\n                y: height * 0.1\n            },\n            // Far left and right edges\n            {\n                x: width * 0.05,\n                y: height * 0.25\n            },\n            {\n                x: width * 0.95,\n                y: height * 0.25\n            },\n            {\n                x: width * 0.05,\n                y: height * 0.75\n            },\n            {\n                x: width * 0.95,\n                y: height * 0.75\n            },\n            // Bottom corners only\n            {\n                x: width * 0.1,\n                y: height * 0.9\n            },\n            {\n                x: width * 0.9,\n                y: height * 0.9\n            }\n        ];\n        // Add nodes only if they're safely outside the text area\n        positions.forEach((pos)=>{\n            const distanceFromCenter = Math.sqrt(Math.pow(pos.x - centerX, 2) + Math.pow(pos.y - centerY, 2));\n            // Only add if it's far enough from the center\n            if (distanceFromCenter > Math.max(exclusionWidth, exclusionHeight) * 0.6) {\n                newNodes.push({\n                    x: pos.x + (Math.random() - 0.5) * 40,\n                    y: pos.y + (Math.random() - 0.5) * 40,\n                    connections: []\n                });\n            }\n        });\n        // Create connections ONLY between nodes that won't cross the text area\n        newNodes.forEach((node, index)=>{\n            newNodes.forEach((otherNode, otherIndex)=>{\n                if (index !== otherIndex && node.connections.length < 2) {\n                    const distance = Math.sqrt(Math.pow(node.x - otherNode.x, 2) + Math.pow(node.y - otherNode.y, 2));\n                    // Check if the line between nodes would cross the exclusion zone\n                    const lineDoesntCrossText = !lineIntersectsRect(node.x, node.y, otherNode.x, otherNode.y, centerX - exclusionWidth / 2, centerY - exclusionHeight / 2, exclusionWidth, exclusionHeight);\n                    if (distance < width * 0.4 && distance > 100 && lineDoesntCrossText) {\n                        node.connections.push(otherIndex);\n                    }\n                }\n            });\n        });\n        setNodes(newNodes);\n        // Initialize traveling lights\n        const initialLights = [];\n        newNodes.forEach((node, nodeIndex)=>{\n            node.connections.forEach((_, connectionIndex)=>{\n                if (Math.random() > 0.3) {\n                    initialLights.push({\n                        id: \"\".concat(nodeIndex, \"-\").concat(connectionIndex),\n                        pathIndex: nodeIndex,\n                        progress: Math.random(),\n                        speed: 0.2 + Math.random() * 0.3\n                    });\n                }\n            });\n        });\n        setLights(initialLights);\n        return ()=>window.removeEventListener(\"resize\", updateDimensions);\n    }, []);\n    // Helper function to check if a line intersects a rectangle\n    const lineIntersectsRect = (x1, y1, x2, y2, rectX, rectY, rectW, rectH)=>{\n        // Simple check if line passes through rectangle\n        const minX = Math.min(x1, x2);\n        const maxX = Math.max(x1, x2);\n        const minY = Math.min(y1, y2);\n        const maxY = Math.max(y1, y2);\n        return !(maxX < rectX || minX > rectX + rectW || maxY < rectY || minY > rectY + rectH);\n    };\n    // Animate traveling lights\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const interval = setInterval(()=>{\n            setLights((prevLights)=>prevLights.map((light)=>({\n                        ...light,\n                        progress: (light.progress + light.speed * 0.02) % 1\n                    })));\n        }, 80);\n        return ()=>clearInterval(interval);\n    }, []);\n    // Get the position of a light along its path\n    const getLightPosition = (light)=>{\n        const node = nodes[light.pathIndex];\n        if (!node || !node.connections.length) return {\n            x: 0,\n            y: 0\n        };\n        const connectionIndex = parseInt(light.id.split(\"-\")[1]);\n        const targetNodeIndex = node.connections[connectionIndex];\n        const targetNode = nodes[targetNodeIndex];\n        if (!targetNode) return {\n            x: 0,\n            y: 0\n        };\n        const x = node.x + (targetNode.x - node.x) * light.progress;\n        const y = node.y + (targetNode.y - node.y) * light.progress;\n        return {\n            x,\n            y\n        };\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute inset-0 overflow-hidden pointer-events-none\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            width: dimensions.width,\n            height: dimensions.height,\n            className: \"absolute inset-0\",\n            style: {\n                opacity: 0.3\n            },\n            children: [\n                nodes.map((node, nodeIndex)=>node.connections.map((targetIndex, connectionIndex)=>{\n                        const targetNode = nodes[targetIndex];\n                        if (!targetNode) return null;\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                            x1: node.x,\n                            y1: node.y,\n                            x2: targetNode.x,\n                            y2: targetNode.y,\n                            stroke: \"currentColor\",\n                            strokeWidth: \"2\",\n                            className: \"text-primary\"\n                        }, \"\".concat(nodeIndex, \"-\").concat(connectionIndex), false, {\n                            fileName: \"/Users/nathansuh/dev/nathansuhme/components/NetworkBackground.tsx\",\n                            lineNumber: 176,\n                            columnNumber: 15\n                        }, this);\n                    })),\n                nodes.map((node, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                        cx: node.x,\n                        cy: node.y,\n                        r: \"5\",\n                        fill: \"currentColor\",\n                        className: \"text-primary\"\n                    }, index, false, {\n                        fileName: \"/Users/nathansuh/dev/nathansuhme/components/NetworkBackground.tsx\",\n                        lineNumber: 192,\n                        columnNumber: 11\n                    }, this)),\n                lights.map((light)=>{\n                    const position = getLightPosition(light);\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                        cx: position.x,\n                        cy: position.y,\n                        r: \"4\",\n                        fill: \"currentColor\",\n                        className: \"text-accent-gold\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"animate\", {\n                            attributeName: \"opacity\",\n                            values: \"0.5;1;0.5\",\n                            dur: \"1.2s\",\n                            repeatCount: \"indefinite\"\n                        }, void 0, false, {\n                            fileName: \"/Users/nathansuh/dev/nathansuhme/components/NetworkBackground.tsx\",\n                            lineNumber: 214,\n                            columnNumber: 15\n                        }, this)\n                    }, light.id, false, {\n                        fileName: \"/Users/nathansuh/dev/nathansuhme/components/NetworkBackground.tsx\",\n                        lineNumber: 206,\n                        columnNumber: 13\n                    }, this);\n                })\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/nathansuh/dev/nathansuhme/components/NetworkBackground.tsx\",\n            lineNumber: 163,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/nathansuh/dev/nathansuhme/components/NetworkBackground.tsx\",\n        lineNumber: 162,\n        columnNumber: 5\n    }, this);\n}\n_s(NetworkBackground, \"lQwKs0X+pg3cHIPNQJFlaHOQ/JE=\");\n_c = NetworkBackground;\nvar _c;\n$RefreshReg$(_c, \"NetworkBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/NetworkBackground.tsx\n"));

/***/ })

});